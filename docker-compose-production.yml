version: "3.9"
services:
  swarm-cronjob:
    image: crazymax/swarm-cronjob:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      LOG_LEVEL: info
    deploy:
      placement:
        constraints: [ node.role == manager ]

  gateway:
    image: ${REGISTRY}/auction-gateway:${IMAGE_TAG}
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/html:/var/www/html:ro
    ports:
      - "80:80"
      - "443:443"
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints: [ node.role == manager ]

  frontend:
    image: ${REGISTRY}/auction-frontend:${IMAGE_TAG}
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s

  api:
    image: ${REGISTRY}/auction-api:${IMAGE_TAG}
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 5s

  api-php-fpm:
    image: ${REGISTRY}/auction-api-php-fpm:${IMAGE_TAG}
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      DB_HOST: api-postgres
      DB_USER: app
      DB_PASSWORD_FILE: /run/secrets/api_db_password
      DB_NAME: app
      MAILER_HOST: ${API_MAILER_HOST}
      MAILER_PORT: ${API_MAILER_PORT}
      MAILER_USERNAME: ${API_MAILER_USERNAME}
      MAILER_PASSWORD_FILE: /run/secrets/api_mailer_password
      MAILER_ENCRYPTION: tls
      MAILER_FROM_EMAIL: ${API_MAILER_FROM_EMAIL}
      FRONTEND_URL: https://auction.frontend.ru
      SENTRY_DSN_FILE: /run/secrets/sentry_dsn
      JWT_ENCRYPTION_KEY_FILE: /run/secrets/jwt_encryption_key
      JWT_PUBLIC_KEY_PATH: /run/secrets/jwt_public_key
      JWT_PRIVATE_KEY_PATH: /run/secrets/jwt_private_key
    secrets:
      - api_db_password
      - api_mailer_password
      - sentry_dsn
      - jwt_encryption_key
      - jwt_public_key
      - jwt_private_key
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 5s

  api-migration:
    image: ${REGISTRY}/auction-api-php-cli:${IMAGE_TAG}
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      DB_HOST: api-postgres
      DB_USER: app
      DB_PASSWORD_FILE: /run/secrets/api_db_password
      DB_NAME: app
      MAILER_HOST: ${API_MAILER_HOST}
      MAILER_PORT: ${API_MAILER_PORT}
      MAILER_USERNAME: ${API_MAILER_USERNAME}
      MAILER_PASSWORD_FILE: /run/secrets/api_mailer_password
      MAILER_ENCRYPTION: tls
      MAILER_FROM_EMAIL: ${API_MAILER_FROM_EMAIL}
      FRONTEND_URL: https://auction.frontend.ru
      SENTRY_DSN_FILE: /run/secrets/sentry_dsn
      JWT_ENCRYPTION_KEY_FILE: /run/secrets/jwt_encryption_key
      JWT_PUBLIC_KEY_PATH: /run/secrets/jwt_public_key
      JWT_PRIVATE_KEY_PATH: /run/secrets/jwt_private_key
    secrets:
      - api_db_password
      - api_mailer_password
      - sentry_dsn
      - jwt_encryption_key
      - jwt_public_key
      - jwt_private_key
    command: sh -c 'wait-for-it api-postgres:5432 -t 60 && php bin/app.php migrations:migrate --no-interaction'
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 120s

  api-oauth-clear-expired:
    image: ${REGISTRY}/auction-api-php-cli:${IMAGE_TAG}
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      DB_HOST: api-postgres
      DB_USER: app
      DB_PASSWORD_FILE: /run/secrets/api_db_password
      DB_NAME: app
      MAILER_HOST: ${API_MAILER_HOST}
      MAILER_PORT: ${API_MAILER_PORT}
      MAILER_USERNAME: ${API_MAILER_USERNAME}
      MAILER_PASSWORD_FILE: /run/secrets/api_mailer_password
      MAILER_ENCRYPTION: tls
      MAILER_FROM_EMAIL: ${API_MAILER_FROM_EMAIL}
      FRONTEND_URL: https://demo-auction.deworker.pro
      SENTRY_DSN_FILE: /run/secrets/sentry_dsn
      JWT_ENCRYPTION_KEY_FILE: /run/secrets/jwt_encryption_key
      JWT_PUBLIC_KEY_PATH: /run/secrets/jwt_public_key
      JWT_PRIVATE_KEY_PATH: /run/secrets/jwt_private_key
    secrets:
      - api_db_password
      - api_mailer_password
      - sentry_dsn
      - jwt_encryption_key
      - jwt_public_key
      - jwt_private_key
    command: sh -c 'wait-for-it api-postgres:5432 -t 60 && php bin/app.php oauth:clear-expired'
    deploy:
      labels:
        - swarm.cronjob.enable=true
        - swarm.cronjob.schedule=0 * * * *
        - swarm.cronjob.skip-running=true
      replicas: 0
      restart_policy:
        condition: none

  api-postgres:
    image: postgres:13.3-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD_FILE: /run/secrets/api_db_password
      POSTGRES_DB: app
    secrets:
      - api_db_password
    volumes:
      - api-postgres:/var/lib/postgresql/data
    deploy:
      placement:
        constraints: [node.labels.db == db]
      endpoint_mode: dnsrr

secrets:
  api_db_password:
    file: ./secrets/api_db_password
  api_mailer_password:
    file: ./secrets/api_mailer_password
  sentry_dsn:
    file: ./secrets/sentry_dsn
  jwt_encryption_key:
    file: ./secrets/jwt_encryption_key
  jwt_public_key:
    file: ./secrets/jwt_public_key
  jwt_private_key:
    file: ./secrets/jwt_private_key

volumes:
  api-postgres: